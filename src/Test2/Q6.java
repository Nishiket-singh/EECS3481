package Test2;

import java.math.BigInteger;

public class Q6 {

	public static void main(String[] args) throws Exception
	{
		BigInteger e1 = new BigInteger("421");
		BigInteger n1 = new BigInteger("130918180062915485900954597631313629864836201978227133319187624210227148776154322707071245742980686741118030867148438370439660292136998104360860705032542533349698053368186836516200888554212669145740474501485880521654642182193789294300080988945147087020219803028448157467640485725166289781136027695109151280023");
		BigInteger c1 = new BigInteger("18038689386315441316207178867846153284127845522927557422378960846757679676574491335837651386531750630339505240659764369941212875108314310791441092976331509011217973250641610612405019707235783440022812931168672454121886975260018826687999795714491262350184835819920201209445232639067116079656328900395698437435");
		BigInteger e2 = new BigInteger("4294967297");
		BigInteger n2 = new BigInteger("105044834493354870427083677016839461592992165240096692747718987052050266455031262116601551194381319276801214817469383111105004997120903526991683696718929079263900746731646833343503145942316362644131024923877835116209542653949534087434706912850426335055450650929515886153502476201279214508628867935210759638049");
		BigInteger c2 = new BigInteger("507906445504233427626752978196669379677429140530883660970321583465711371558122822193775630648221037453616212637259383830506231909554568907644417919917374051770904791620390272350480319311737797880355471844473051700724709278446675607561233758612461301088837492705301478482177657687330406235025387433579565066");
		BigInteger p = n1.gcd(n2);
		BigInteger q1 = n1.divide(p);
		BigInteger q2 = n2.divide(p);
		
		BigInteger one = new BigInteger("1");
		
		BigInteger pMinus1 = p.subtract(one);
		BigInteger q1Minus1 = q1.subtract(one);
		BigInteger q2Minus1 = q2.subtract(one);

		BigInteger phi1 = pMinus1.multiply(q1Minus1);
		BigInteger phi2 = pMinus1.multiply(q2Minus1);
		
		BigInteger d1 = e1.modInverse(phi1);
		BigInteger d2 = e1.modInverse(phi2);
		
		BigInteger pt = c1.modPow(d1, n1);
		System.out.println(new String(pt.toByteArray()));
		
	}
}
